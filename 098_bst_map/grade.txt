Grading at 11/09/2021:03:51:15.183244
For commit ID 5f604b5d98de9ba4950c85bd09ff03af1ea352a9
Grading at Mon Nov  8 22:51:13 EST 2021
-----------------------------------------------
testcase 1 : Testing with BstMap<int,int>
...compiling...
In file included from 89-tester.cpp:1:0:
bstmap.h: In instantiation of ‘void BstMap<K, V>::copy(BstMap<K, V>::Node*, BstMap<K, V>::Node*) [with K = int; V = int]’:
bstmap.h:101:61:   required from ‘BstMap<K, V>::BstMap(const BstMap<K, V>&) [with K = int; V = int]’
89-tester.cpp:95:36:   required from here
bstmap.h:97:16: error: void value not ignored as it ought to be
     root->left = copy(root->left, rhs_root->left);
     ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bstmap.h:98:17: error: void value not ignored as it ought to be
     root->right = copy(root->right, rhs_root->right);
     ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The code did not compile.  This test failed.
-----------------------------------------------
testcase 2 : Testing with BstMap<int,std::string>
...compiling...
In file included from 89-tester.cpp:1:0:
bstmap.h: In instantiation of ‘void BstMap<K, V>::copy(BstMap<K, V>::Node*, BstMap<K, V>::Node*) [with K = int; V = std::__cxx11::basic_string<char>]’:
bstmap.h:101:61:   required from ‘BstMap<K, V>::BstMap(const BstMap<K, V>&) [with K = int; V = std::__cxx11::basic_string<char>]’
89-tester.cpp:95:36:   required from here
bstmap.h:97:16: error: void value not ignored as it ought to be
     root->left = copy(root->left, rhs_root->left);
     ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bstmap.h:98:17: error: void value not ignored as it ought to be
     root->right = copy(root->right, rhs_root->right);
     ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The code did not compile.  This test failed.
-----------------------------------------------
testcase 3 : Testing with BstMap<int,(a custom class we wrote)>
...compiling...
In file included from 89-tester.cpp:1:0:
bstmap.h: In instantiation of ‘void BstMap<K, V>::copy(BstMap<K, V>::Node*, BstMap<K, V>::Node*) [with K = int; V = Tester]’:
bstmap.h:101:61:   required from ‘BstMap<K, V>::BstMap(const BstMap<K, V>&) [with K = int; V = Tester]’
89-tester.cpp:95:36:   required from here
bstmap.h:97:16: error: void value not ignored as it ought to be
     root->left = copy(root->left, rhs_root->left);
     ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bstmap.h:98:17: error: void value not ignored as it ought to be
     root->right = copy(root->right, rhs_root->right);
     ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bstmap.h: In instantiation of ‘void BstMap<K, V>::remove(const K&) [with K = int; V = Tester]’:
89-tester.cpp:197:1:   required from here
bstmap.h:78:25: error: no match for ‘operator=’ (operand types are ‘Tester’ and ‘int’)
           (*cur)->value = (*replace)->key;
           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
89-tester.cpp:6:7: note: candidate: Tester& Tester::operator=(const Tester&)
 class Tester{
       ^~~~~~
89-tester.cpp:6:7: note:   no known conversion for argument 1 from ‘int’ to ‘const Tester&’
The code did not compile.  This test failed.
-----------------------------------------------
testcase 4 : Testing with BstMap<std::string,int>
...compiling...
In file included from 89-tester.cpp:1:0:
bstmap.h: In instantiation of ‘void BstMap<K, V>::copy(BstMap<K, V>::Node*, BstMap<K, V>::Node*) [with K = std::__cxx11::basic_string<char>; V = int]’:
bstmap.h:101:61:   required from ‘BstMap<K, V>::BstMap(const BstMap<K, V>&) [with K = std::__cxx11::basic_string<char>; V = int]’
89-tester.cpp:95:36:   required from here
bstmap.h:97:16: error: void value not ignored as it ought to be
     root->left = copy(root->left, rhs_root->left);
     ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bstmap.h:98:17: error: void value not ignored as it ought to be
     root->right = copy(root->right, rhs_root->right);
     ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bstmap.h: In instantiation of ‘void BstMap<K, V>::remove(const K&) [with K = std::__cxx11::basic_string<char>; V = int]’:
89-tester.cpp:197:1:   required from here
bstmap.h:78:25: error: cannot convert ‘std::__cxx11::basic_string<char>’ to ‘int’ in assignment
           (*cur)->value = (*replace)->key;
           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
The code did not compile.  This test failed.
-----------------------------------------------
testcase 5 : Testing with BstMap<std::string,std::string>
...compiling...
In file included from 89-tester.cpp:1:0:
bstmap.h: In instantiation of ‘void BstMap<K, V>::copy(BstMap<K, V>::Node*, BstMap<K, V>::Node*) [with K = std::__cxx11::basic_string<char>; V = std::__cxx11::basic_string<char>]’:
bstmap.h:101:61:   required from ‘BstMap<K, V>::BstMap(const BstMap<K, V>&) [with K = std::__cxx11::basic_string<char>; V = std::__cxx11::basic_string<char>]’
89-tester.cpp:95:36:   required from here
bstmap.h:97:16: error: void value not ignored as it ought to be
     root->left = copy(root->left, rhs_root->left);
     ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bstmap.h:98:17: error: void value not ignored as it ought to be
     root->right = copy(root->right, rhs_root->right);
     ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The code did not compile.  This test failed.
-----------------------------------------------
testcase 6 : Testing with BstMap<std::string,(a custom class we wrote)>
...compiling...
In file included from 89-tester.cpp:1:0:
bstmap.h: In instantiation of ‘void BstMap<K, V>::copy(BstMap<K, V>::Node*, BstMap<K, V>::Node*) [with K = std::__cxx11::basic_string<char>; V = Tester]’:
bstmap.h:101:61:   required from ‘BstMap<K, V>::BstMap(const BstMap<K, V>&) [with K = std::__cxx11::basic_string<char>; V = Tester]’
89-tester.cpp:95:36:   required from here
bstmap.h:97:16: error: void value not ignored as it ought to be
     root->left = copy(root->left, rhs_root->left);
     ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bstmap.h:98:17: error: void value not ignored as it ought to be
     root->right = copy(root->right, rhs_root->right);
     ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bstmap.h: In instantiation of ‘void BstMap<K, V>::remove(const K&) [with K = std::__cxx11::basic_string<char>; V = Tester]’:
89-tester.cpp:197:1:   required from here
bstmap.h:78:25: error: no match for ‘operator=’ (operand types are ‘Tester’ and ‘std::__cxx11::basic_string<char>’)
           (*cur)->value = (*replace)->key;
           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
89-tester.cpp:6:7: note: candidate: Tester& Tester::operator=(const Tester&)
 class Tester{
       ^~~~~~
89-tester.cpp:6:7: note:   no known conversion for argument 1 from ‘std::__cxx11::basic_string<char>’ to ‘const Tester&’
The code did not compile.  This test failed.
-----------------------------------------------
testcase 7 : Testing with BstMap<(a custom class we wrote),int>
...compiling...
In file included from 89-tester.cpp:1:0:
bstmap.h: In instantiation of ‘void BstMap<K, V>::copy(BstMap<K, V>::Node*, BstMap<K, V>::Node*) [with K = Tester; V = int]’:
bstmap.h:101:61:   required from ‘BstMap<K, V>::BstMap(const BstMap<K, V>&) [with K = Tester; V = int]’
89-tester.cpp:95:36:   required from here
bstmap.h:97:16: error: void value not ignored as it ought to be
     root->left = copy(root->left, rhs_root->left);
     ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bstmap.h:98:17: error: void value not ignored as it ought to be
     root->right = copy(root->right, rhs_root->right);
     ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bstmap.h: In instantiation of ‘void BstMap<K, V>::remove(const K&) [with K = Tester; V = int]’:
89-tester.cpp:197:1:   required from here
bstmap.h:78:25: error: cannot convert ‘Tester’ to ‘int’ in assignment
           (*cur)->value = (*replace)->key;
           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
The code did not compile.  This test failed.
-----------------------------------------------
testcase 8 : Testing with BstMap<(a custom class we wrote),std::string>
...compiling...
In file included from 89-tester.cpp:1:0:
bstmap.h: In instantiation of ‘void BstMap<K, V>::copy(BstMap<K, V>::Node*, BstMap<K, V>::Node*) [with K = Tester; V = std::__cxx11::basic_string<char>]’:
bstmap.h:101:61:   required from ‘BstMap<K, V>::BstMap(const BstMap<K, V>&) [with K = Tester; V = std::__cxx11::basic_string<char>]’
89-tester.cpp:95:36:   required from here
bstmap.h:97:16: error: void value not ignored as it ought to be
     root->left = copy(root->left, rhs_root->left);
     ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bstmap.h:98:17: error: void value not ignored as it ought to be
     root->right = copy(root->right, rhs_root->right);
     ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bstmap.h: In instantiation of ‘void BstMap<K, V>::remove(const K&) [with K = Tester; V = std::__cxx11::basic_string<char>]’:
89-tester.cpp:197:1:   required from here
bstmap.h:78:25: error: no match for ‘operator=’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘Tester’)
           (*cur)->value = (*replace)->key;
           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/7/string:52:0,
                 from /usr/include/c++/7/bits/locale_classes.h:40,
                 from /usr/include/c++/7/bits/ios_base.h:41,
                 from /usr/include/c++/7/ios:42,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from bstmap.h:2,
                 from 89-tester.cpp:1:
/usr/include/c++/7/bits/basic_string.h:654:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       operator=(const basic_string& __str)
       ^~~~~~~~
/usr/include/c++/7/bits/basic_string.h:654:7: note:   no known conversion for argument 1 from ‘Tester’ to ‘const std::__cxx11::basic_string<char>&’
/usr/include/c++/7/bits/basic_string.h:693:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       operator=(const _CharT* __s)
       ^~~~~~~~
/usr/include/c++/7/bits/basic_string.h:693:7: note:   no known conversion for argument 1 from ‘Tester’ to ‘const char*’
/usr/include/c++/7/bits/basic_string.h:704:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(_CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       operator=(_CharT __c)
       ^~~~~~~~
/usr/include/c++/7/bits/basic_string.h:704:7: note:   no known conversion for argument 1 from ‘Tester’ to ‘char’
The code did not compile.  This test failed.
-----------------------------------------------
testcase 9 : Testing with BstMap<(a custom class we wrote),(a custom class we wrote)>
...compiling...
In file included from 89-tester.cpp:1:0:
bstmap.h: In instantiation of ‘void BstMap<K, V>::copy(BstMap<K, V>::Node*, BstMap<K, V>::Node*) [with K = Tester; V = Tester]’:
bstmap.h:101:61:   required from ‘BstMap<K, V>::BstMap(const BstMap<K, V>&) [with K = Tester; V = Tester]’
89-tester.cpp:95:36:   required from here
bstmap.h:97:16: error: void value not ignored as it ought to be
     root->left = copy(root->left, rhs_root->left);
     ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
bstmap.h:98:17: error: void value not ignored as it ought to be
     root->right = copy(root->right, rhs_root->right);
     ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The code did not compile.  This test failed.

Overall Grade: F
